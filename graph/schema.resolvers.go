package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.39

import (
	"context"
	"fmt"
	"my-what3words-clone/graph/model"
)

// CreateTodo is the resolver for the createTodo field.
func (r *mutationResolver) CreateTodo(ctx context.Context, input model.NewTodo) (*model.Todo, error) {
	panic(fmt.Errorf("not implemented: CreateTodo - createTodo"))
}

// Todos is the resolver for the todos field.
func (r *queryResolver) Todos(ctx context.Context) ([]*model.Todo, error) {
	panic(fmt.Errorf("not implemented: Todos - todos"))
}

// GetLocationByWords is the resolver for the getLocationByWords field.
func (r *queryResolver) GetLocationByWords(ctx context.Context, words string) (*model.Location, error) {
	panic(fmt.Errorf("not implemented: GetLocationByWords - getLocationByWords"))
}

// GetWordsByLocation is the resolver for the getWordsByLocation field.
func (r *queryResolver) GetWordsByLocation(ctx context.Context, lat float64, lng float64) (*model.Words, error) {
	panic(fmt.Errorf("not implemented: GetWordsByLocation - getWordsByLocation"))
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
